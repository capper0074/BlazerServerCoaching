
@page "/Match"
@using BlazerServerCoaching.Data.Models;
@using BlazerServerCoaching.Data.Repo;

<PageTitle>Match</PageTitle>
<h3>Match Stats</h3>

<section class="Hero">

	<table class="table">
		<thead>
			<tr>
				<th>Id</th>
				<th>Date</th>
				<th>Type</th>
				<th>Oppenent</th>
				<th>Maps</th>
				<th>Satus</th>
				<th>T Win</th>
				<th>T Loss</th>
				<th>Total T</th>
				<th>CT Win</th>
				<th>CT Loss</th>
				<th>Total CT</th>
				<th>T Pistol</th>
				<th>CT Pistol</th>

			</tr>

		</thead>

		<tbody class="matchData">
			<tr>

				<td>543</td>
				<td>18-11-2023</td>
				<td>Scrim</td>
				<td>Astralis</td>
				<td>Vertigo</td>
				<td>Vundet</td>
				<td>8</td>
				<td>2</td>
				<td>Meh</td>
				<td>5</td>
				<td>1</td>
				<td>Meh</td>
				<td>Vundet</td>
				<td>Vundet</td>

			</tr>

			@foreach (var matchList in matchLists)
			{
				<tr>
					<td>@matchList.Id</td>
					<td>@matchList.Date</td>
					<td>@matchList.Type</td>
					<td>@matchList.Oppenent</td>
					<td>@matchList.Maps</td>
					<td>@matchList.Status</td>
					<td>@matchList.TSideW</td>
					<td>@matchList.TSideL</td>
					<td>@CalculateTotalRound(matchList.TSideW, matchList.TSideL)</td>
					<td>@matchList.CTSideW</td>
					<td>@matchList.CTSideL</td>
					<td>@CalculateTotalRound(matchList.CTSideW, matchList.CTSideL)</td>
					<td>@matchList.TPistol</td>
					<td>@matchList.CTPistol</td>
				</tr>
			}




		</tbody>

		</table>
</section>
	



<div class="Buttons">
	<button class="buttonInsert" role="button" >Add a match</button> 

	<button class="buttonDelete" role="button">Remove a match</button>

	<button class="buttonEdit" role="button" >Edit a match</button>
</div>


@code {

	private MatchRepo matchRepo = new MatchRepo();

	protected override void OnInitialized()
	{
		MatchType test = 0;

		MatchMaps test1 = 0;

		MatchStatus test2 = 0;

		matchRepo.Save("12/12/2012", test, "bøv", test1 , test2, 10, 2, 3, 5, false, true);
	}

	private List<Match> matchLists = MatchRepo.GetMatchList();

	public int? CalculateTotalRound(int? wonRounds, int? lostRounds)
	{
		return wonRounds + lostRounds;
	}

	

}
