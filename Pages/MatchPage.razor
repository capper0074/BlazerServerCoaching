@page "/Match"
@using BlazerServerCoaching.Data.Models;
@using BlazerServerCoaching.Data.Repo;
@using BlazorBootstrap


<PageTitle>Match</PageTitle>
<h3>Match Stats</h3>

<section class="Hero">

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Date</th>
                <th>Type</th>
                <th>Oppenent</th>
                <th>Maps</th>
                <th>Satus</th>
                <th>T Win</th>
                <th>T Loss</th>
                <th>Total T</th>
                <th>CT Win</th>
                <th>CT Loss</th>
                <th>Total CT</th>
                <th>T Pistol</th>
                <th>CT Pistol</th>

            </tr>

        </thead>
        <tbody class="matchData">


            @for (int i = 0; i < matchLists.Count(); i++)
            {
                <tr>
                    <td>@matchLists[i].Id</td>
                    <td>@matchLists[i].Date</td>
                    <td>@matchLists[i].Type</td>
                    <td>@matchLists[i].Oppenent</td>
                    <td>@matchLists[i].Maps</td>
                    <td>@matchLists[i].Status</td>
                    <td>@matchLists[i].TSideW</td>
                    <td>@matchLists[i].TSideL</td>
                    <td>@CalculateTotalRound(matchLists[i].TSideW, matchLists[i].TSideL)</td>
                    <td>@matchLists[i].CTSideW</td>
                    <td>@matchLists[i].CTSideL</td>
                    <td>@CalculateTotalRound(matchLists[i].CTSideW, matchLists[i].CTSideL)</td>
                    <td>@matchLists[i].TPistol</td>
                    <td>@matchLists[i].CTPistol</td>
                </tr>
            }

            @matchLists.Clear
        </tbody>

    </table>
</section>

<Modal @ref="modal" Title="Create match">
    <BodyTemplate>
        Fill all the boxes to add a match

        <form action="/action_page.php">
            <label for="fname">First name:</label><br>
            <input type="text" id="fname" name="fname" value=""><br>
            <label for="lname">Last name:</label><br>
            <input type="text" id="lname" name="lname" value=""><br><br>
            <input type="submit" value="Submit">
        </form>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
        <Button Color="ButtonColor.Primary">Save changes</Button>
    </FooterTemplate>
</Modal>



<div class="Buttons">
    <button class="buttonInsert" role="button" @onclick="OnShowModalClick"> Create Match </button>

    <button class="buttonDelete" role="button">Remove a match</button>

    <button class="buttonEdit" role="button">Edit a match</button>
</div>


@code {

    private Modal? modal = default!;

    private void SaveChanges()
    {
        matchRepo.Save();
    }

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }

    private bool isInitialized;

    private MatchRepo matchRepo = new MatchRepo();

    protected override async Task OnInitializedAsync()
    {
        matchRepo.Load();

        //MatchType test = 0;

        //MatchMaps test1 = 0;

        //MatchStatus test2 = 0;

        //matchRepo.Save("12/12/2012", test, "bøv", test1 , test2, 10, 2, 3, 5, false, true);

    }

    private List<Match> matchLists = MatchRepo.GetMatchList();

    public int? CalculateTotalRound(int? wonRounds, int? lostRounds)
    {
        return wonRounds + lostRounds;
    }



}
