
@page "/Match"
@using BlazerServerCoaching.Data.Models;
@using BlazerServerCoaching.Data.Repo;
@using DevExpress.Blazor;

<PageTitle>Match</PageTitle>
<h3>Match Stats</h3>

<section class="Hero">

	<table class="table">
		<thead>
			<tr>
				<th>Id</th>
				<th>Date</th>
				<th>Type</th>
				<th>Oppenent</th>
				<th>Maps</th>
				<th>Satus</th>
				<th>T Win</th>
				<th>T Loss</th>
				<th>Total T</th>
				<th>CT Win</th>
				<th>CT Loss</th>
				<th>Total CT</th>
				<th>T Pistol</th>
				<th>CT Pistol</th>

			</tr>

		</thead>
		<tbody class="matchData">

			@for (int i = 0; i < matchLists.Count(); i++)
			{
				<tr>
					<td>@matchLists[i].Id</td>
					<td>@matchLists[i].Date</td>
					<td>@matchLists[i].Type</td>
					<td>@matchLists[i].Oppenent</td>
					<td>@matchLists[i].Maps</td>
					<td>@matchLists[i].Status</td>
					<td>@matchLists[i].TSideW</td>
					<td>@matchLists[i].TSideL</td>
					<td>@CalculateTotalRound(matchLists[i].TSideW, matchLists[i].TSideL)</td>
					<td>@matchLists[i].CTSideW</td>
					<td>@matchLists[i].CTSideL</td>
					<td>@CalculateTotalRound(matchLists[i].CTSideW, matchLists[i].CTSideL)</td>
					<td>@matchLists[i].TPistol</td>
					<td>@matchLists[i].CTPistol</td>
				</tr>
			}
		</tbody>

	</table>
</section>
	



<div class="Buttons">
	<button class="buttonInsert" role="button" </button>

	<button class="buttonDelete" role="button">Remove a match</button>

	<button class="buttonEdit" role="button" >Edit a match</button>
</div>

<DxPopup Visible="@PopupVisible" VisibleChanged="@OnPopupVisibleChanged">
    <BodyContentTemplate>
        <SampleEditForm/>
    </BodyContentTemplate>
    <FooterContentTemplate>
        <DxButton CssClass="popup-button my-1 ms-2" RenderStyle="ButtonRenderStyle.Primary" Text="OK" Click="@(() => PopupVisible = false)" />
        <DxButton CssClass="popup-button my-1 ms-2" RenderStyle="ButtonRenderStyle.Secondary" Text="Cancel" Click="@(() => PopupVisible = false)" />
    </FooterContentTemplate>
</DxPopup>


@code {

	private MatchRepo matchRepo = new MatchRepo();

	private bool PopupVisible { get; set; }

	private bool isInitialized;

	private void OnPopupVisibleChanged(bool newVisibility)
	{
		PopupVisible = newVisibility;
	}

	protected override async Task OnInitializedAsync()
	{
		if (!isInitialized)
		{
			matchRepo.Load();
			isInitialized = true;
		}
		


		//MatchType test = 0;

		 //MatchMaps test1 = 0;

		 //MatchStatus test2 = 0;

		 //matchRepo.Save("12/12/2012", test, "bøv", test1 , test2, 10, 2, 3, 5, false, true);

		
	}

	private List<Match> matchLists = MatchRepo.GetMatchList();

	public int? CalculateTotalRound(int? wonRounds, int? lostRounds)
	{
		return wonRounds + lostRounds;
	}

	

}
